environment:
  global:
    APPVEYOR_PYTHON_URL: "https://raw.githubusercontent.com/ogrisel/python-appveyor-demo/master/appveyor/"

    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.15
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.15
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x" # currently 3.4.4
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.4
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x" # currently 3.6.6
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x" # currently 3.6.6
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x" # currently 3.7.1
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x" # currently 3.7.1
      PYTHON_ARCH: "64"

install:
  # Download the Appveyor Python build accessories into subdirectory .\appveyor
  - mkdir appveyor
  - ps: $wc = new-object net.webclient
  - ps: $run = $wc.DownloadString($env:APPVEYOR_PYTHON_URL + 'run_with_env.cmd')
  - ps: $run | Out-File -Encoding ascii -FilePath appveyor\run_with_env.cmd
  - ps: $install = $wc.DownloadString($env:APPVEYOR_PYTHON_URL + 'install.ps1')
  - ps: $install | Out-File -Encoding ascii -FilePath appveyor\install.ps1
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  - "%CMD_IN_ENV% pip install -r tests\\requirements.txt"
  - "%CMD_IN_ENV% python setup.py install"

build: false

test_script:
  - py.test tests/test.py --cov=codecov

after_test:
  - rm -rf tests/coverages
  - if not exist dist mkdir dist
  - if exist .coverage (cp .coverage dist\) else (echo no .coverage)
  - codecov
  - if exist coverage.xml (cp coverage.xml dist\) else (echo no coverage.xml)

artifacts:
  - path: dist\*
